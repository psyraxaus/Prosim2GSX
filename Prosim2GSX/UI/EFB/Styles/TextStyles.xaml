<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!-- Base Text Block Style -->
    <Style x:Key="EFBBaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource EFBTextPrimaryBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,0,0,5" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <!-- Header Text Style (H1) -->
    <Style x:Key="EFBHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{DynamicResource HeaderFontSize}" />
        <Setter Property="FontWeight" Value="{DynamicResource HeaderFontWeight}" />
        <Setter Property="Margin" Value="0,0,0,10" />
    </Style>
    
    <!-- Panel Header Style -->
    <Style x:Key="EFBPanelHeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBHeaderTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBTextContrastBrush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="5" />
    </Style>
    
    <!-- Sub Header Text Style (H2) -->
    <Style x:Key="EFBSubHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{DynamicResource SubheaderFontSize}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,8" />
    </Style>
    
    <!-- Body Text Style -->
    <Style x:Key="EFBBodyTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="LineHeight" Value="20" />
    </Style>
    
    <!-- Caption Text Style -->
    <Style x:Key="EFBCaptionTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource EFBTextSecondaryBrush}" />
    </Style>
    
    <!-- Label Text Style -->
    <Style x:Key="EFBLabelTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,2" />
    </Style>
    
    <!-- Value Text Style -->
    <Style x:Key="EFBValueTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    
    <!-- Status Text Style -->
    <Style x:Key="EFBStatusTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    
    <!-- Success Text Style -->
    <Style x:Key="EFBSuccessTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBStatusSuccessTextBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    
    <!-- Warning Text Style -->
    <Style x:Key="EFBWarningTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBStatusWarningTextBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    
    <!-- Error Text Style -->
    <Style x:Key="EFBErrorTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBStatusErrorTextBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    
    <!-- Info Text Style -->
    <Style x:Key="EFBInfoTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBStatusInfoTextBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>
    
    <!-- Accent Text Style -->
    <Style x:Key="EFBAccentTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBAccentBrush}" />
    </Style>
    
    <!-- Primary Text Style -->
    <Style x:Key="EFBPrimaryTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBPrimaryBrush}" />
    </Style>
    
    <!-- Monospace Text Style -->
    <Style x:Key="EFBMonospaceTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="{DynamicResource MonospaceFontFamily}" />
    </Style>
    
    <!-- Flight Phase Text Style -->
    <Style x:Key="EFBFlightPhaseTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBSubHeaderTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBPrimaryBrush}" />
    </Style>
    
    <!-- Service Status Text Style -->
    <Style x:Key="EFBServiceStatusTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBStatusTextStyle}">
    </Style>
    
    <!-- Numeric Value Text Style -->
    <Style x:Key="EFBNumericValueTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBValueTextStyle}">
        <Setter Property="FontFamily" Value="{DynamicResource MonospaceFontFamily}" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>
    
    <!-- Unit Text Style -->
    <Style x:Key="EFBUnitTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBCaptionTextStyle}">
        <Setter Property="Margin" Value="2,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
    </Style>
    
    <!-- Hyperlink Text Style -->
    <Style x:Key="EFBHyperlinkTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBInfoBrush}" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
    
    <!-- Footer Text Style -->
    <Style x:Key="EFBFooterTextStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBCaptionTextStyle}">
        <Setter Property="Margin" Value="0,10,0,0" />
    </Style>
    
    <!-- Text on Colored Background Styles -->
    <Style x:Key="EFBTextOnPrimaryStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBTextContrastBrush}" />
    </Style>
    
    <Style x:Key="EFBTextOnSecondaryStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBTextContrastBrush}" />
    </Style>
    
    <Style x:Key="EFBTextOnAccentStyle" TargetType="TextBlock" BasedOn="{StaticResource EFBBaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource EFBTextContrastBrush}" />
    </Style>
    
    <!-- TextBox Style -->
    <Style x:Key="EFBTextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource InputForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,5" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="{DynamicResource InputCornerRadius}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="False" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource InputFocusBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource InputFocusBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Numeric TextBox Style -->
    <Style x:Key="EFBNumericTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource EFBTextBoxStyle}">
        <Setter Property="FontFamily" Value="{DynamicResource MonospaceFontFamily}" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>
    
    <!-- Password Box Style -->
    <Style x:Key="EFBPasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Foreground" Value="{DynamicResource InputForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,5" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="FontSize" Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource PrimaryFontFamily}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="{DynamicResource InputCornerRadius}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                      Focusable="False" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Hidden"
                                      Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource InputFocusBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource InputFocusBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
